//
//  MemberViewController.swift
//  EvenH2
//
//  Created by CHYUN on 10/22/24.
//
// Î∞ïÏ±ÑÌòÑ

import UIKit

struct EvenMember {
    private let key: Int
    private let enName: String
    private let krName: String
    private let tmi: String
    private let imgAssetName: String
    private let hash: [String]
    private let introduction: String
    private let role: String
    private let blogUrlPath: String
    private let gitUrlPath: String
    
    init(key: Int, enName: String, krName: String, tmi: String, imgAssetName: String, hash: [String], introduction: String, role: String, blogUrlPath: String, gitUrlPath: String) {
        self.key = key
        self.enName = enName
        self.krName = krName
        self.tmi = tmi
        self.imgAssetName = imgAssetName
        self.hash = hash
        self.introduction = introduction
        self.role = role
        self.blogUrlPath = blogUrlPath
        self.gitUrlPath = gitUrlPath
    }
    
    func getKey() -> Int { return key }
    func getEnName() -> String { return enName }
    func getKrName() -> String { return krName }
    func getTmi() -> String { return tmi }
    func getImgAssetName() -> String { return imgAssetName }
    func getHash() -> [String] { return hash }
    func getIntroduction() -> String { return introduction }
    func getRole() -> String { return role }
    func getBlogUrlPath() -> String { return blogUrlPath }
    func getGitUrlPath() -> String { return gitUrlPath }
    
}


class MemberViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    
//    let members: [(String,String)] = [
//        ("Chae-Hyun Park", "ÎèôÏÉùÏù¥ ÏßÄÎÇú Îã¨Ïóê Ï†ÑÏó≠Ìï® üëΩ"),
//        ("Si-Yeon Park", "Ïßë Ïïû Îñ°Î≥∂Ïù¥ JMT üíï"),
//        ("Doyle Hwang", "Ïª§ÌîºÎ≥¥Îã§Îäî ÎßàÌÖåÏ∞® üçµ"),
//        ("Min-Seok Park", "ÏïÑÏßÅ Ïó¨Î¶ÑÏù¥Î∂à ÎçÆÎäî Ï§ë~ üí¶"),
//        ("Young-Jin Na", "Ï∞ΩÎ¨∏Ïù¥ ÎÑàÎ¨¥ Ïª§ÏÑú Îú®Í±∞ÏõÄ üåà"),
//        ("Sang-Kyeong Jang", "Ïï†ÌîåÏõåÏπò ÏãúÎ¶¨Ï¶à10 Íµ¨Îß§ üòà")
//    ]
    
    let members: [EvenMember] = [
        EvenMember(key: 0, enName: "Chae-Hyun Park", krName: "Î∞ïÏ±ÑÌòÑ", tmi: "ÎèôÏÉùÏù¥ ÏßÄÎÇú Îã¨Ïóê Ï†ÑÏó≠Ìï® üëΩ", imgAssetName: "img_ch", hash: ["ESTJ", "Ï†ÅÍ∑πÏ†Å", "Î¶¨ÎçîÏã≠", "KIAÌå¨"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî, Ï†ÄÎäî 2Ï°∞Ïùò ÌåÄÏû•ÏùÑ Îß°Í≥† ÏûàÎäî Î∞ïÏ±ÑÌòÑÏûÖÎãàÎã§.  ÌåÄÏõêÎ∂ÑÎì§Ïùò ÏùòÍ≤¨ÏùÑ Ï†ÅÍ∑π ÏàòÏö©ÌïòÎ†§ ÎÖ∏Î†•ÌïòÎ©∞ ÏûëÏóÖÏùÑ ÏßÑÌñâÌïòÏòÄÏäµÎãàÎã§. 2Î∏êÏ°∞ ÌåÄÏõêÏù¥ Ï†úÏùº ÏµúÍ≥†Ïïº!", role: "Ìó§Îìú ÌîÑÎ†àÏ††ÌÑ∞",
                   blogUrlPath: "https://chhue96.tistory.com/", gitUrlPath: "https://github.com/chaehyunp"),
        
        EvenMember(key: 1, enName: "Si-Yeon Park", krName: "Î∞ïÏãúÏó∞", tmi: "Ïßë Ïïû Îñ°Î≥∂Ïù¥ JMT üíï", imgAssetName: "img_sy", hash: ["ISFJ", "Î∞îÏßÄÎü∞Ìï®", "Î∂ÄÎìúÎü¨ÏõÄ", "Î™ÖÏòàÏÜåÎ∞©Í¥Ä"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî 2Ï°∞ Î∞ïÏãúÏó∞ÏûÖÎãàÎã§. Ïù¥Î≤à ÏÜåÍ∞ú Ïï±ÏóêÏÑúÎäî ÌåÄÏõê ÎîîÌÖåÏùº Î∑∞Î•º Îß°ÏïòÏäµÎãàÎã§. Î©òÌÉàÏºÄÏñ¥ÏôÄ Í∞ÑÎã®Ìïú ÏΩîÎìú Ïù¥ÏäàÎ•º Ìï®Íªò Ìï¥Í≤∞ÌñàÏäµÎãàÎã§!", role: "ÎØ∏Îãà ÌäúÌÑ∞",
                   blogUrlPath: "https://velog.io/@sy0201", gitUrlPath: "https://github.com/sy0201"),
        
        EvenMember(key: 2, enName: "Doyle Hwang", krName: "Ìô©ÎèÑÏùº", tmi: "Ïª§ÌîºÎ≥¥Îã§Îäî ÎßàÌÖåÏ∞® üçµ", imgAssetName: "img_dy", hash: ["INFP", "Ïπ®Ï∞©Ìï®", "ÎÅàÍ∏∞", "Ìè¨ÌÜ†Í∑∏ÎûòÌçº"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî! 2Ï°∞Ïùò ÍπêÏ£Ω Îã¥Îãπ Ìô©ÎèÑÏùºÏûÖÎãàÎã§. ÎÜìÏπòÍ∏∞ Ïâ¨Ïö¥ ÎîîÌÖåÏùºÏùÑ Î≥¥Í≥† ÏôÑÏÑ±ÎèÑÎ•º ÎÜíÏù¥Í∏∞ ÏúÑÌï¥ ÌåÄÏõêÏùÑ Í∑ÄÏ∞ÆÍ≤å ÌïòÎäî Í±∏ Ï¢ãÏïÑÌï©ÎãàÎã§ >:D", role: "ÏÑ∏ÏÖò Î¶¨ÎßàÏù∏Îçî",
                   blogUrlPath: "https://velog.io/@doylehworks", gitUrlPath: "https://github.com/DoyleHWorks"),
        
        EvenMember(key: 3, enName: "Min-Seok Park", krName: "Î∞ïÎØºÏÑù", tmi: "ÏïÑÏßÅ Ïó¨Î¶ÑÏù¥Î∂à ÎçÆÎäî Ï§ë~ üí¶", imgAssetName: "img_ms", hash: ["INTP", "Î∂ÑÏÑùÏ†Å", "ÏÑ¨ÏÑ∏Ìï®", "GitÌï¥Í≤∞ÏÇ¨"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî, Ï†ÄÎäî 2Ï°∞Ïùò ÌåÄÏû•ÏùÑ Îß°Í≥† ÏûàÎäî Î∞ïÏ±ÑÌòÑÏûÖÎãàÎã§.  ÌåÄÏõêÎ∂ÑÎì§Ïùò ÏùòÍ≤¨ÏùÑ Ï†ÅÍ∑π ÏàòÏö©ÌïòÎ†§ ÎÖ∏Î†•ÌïòÎ©∞ ÏûëÏóÖÏùÑ ÏßÑÌñâÌïòÏòÄÏäµÎãàÎã§. 2Î∏êÏ°∞ ÌåÄÏõêÏù¥ Ï†úÏùº ÏµúÍ≥†Ïïº!", role: "Î∞îÏù¥Î∏å Îß§ÎãàÏ†Ä",
                   blogUrlPath: "https://iosstudyletsgo.tistory.com/", gitUrlPath: "https://github.com/maxminseok"),
        
        EvenMember(key: 4, enName: "Young-Jin Na", krName: "ÎÇòÏòÅÏßÑ", tmi: "Ï∞ΩÎ¨∏Ïù¥ ÎÑàÎ¨¥ Ïª§ÏÑú Îú®Í±∞ÏõÄ üåà", imgAssetName: "img_yj", hash: ["INFJ", "Ï∞®Î∂ÑÌï®", "Îßê ÏûòÎì§Ïùå", "ÏÇ∞Îì§Î∞îÎûå"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî 2Ï°∞ ÎÇòÏòÅÏßÑÏûÖÎãàÎã§. ÏïΩÏÜç Î∑∞Î•º Îß°ÏïòÏäµÎãàÎã§.  Í∞úÎ∞úÏù¥ Ï≤òÏùåÏù¥ÏßÄÎßå ÌåÄÏõêÎ∂ÑÎì§Ïùò ÎßéÏùÄ ÎèÑÏõÄ ÎçïÎ∂ÑÏóê Ïû¨ÎØ∏ÎèÑ ÎäêÎÅºÍ≥† Ïûò Îî∞ÎùºÍ∞à Ïàò ÏûàÏóàÏäµÎãàÎã§.", role: "ÎîîÏßÄÌÑ∏ Ï†ÑÏÑúÍµ¨",
                   blogUrlPath: "https://yjuni22.tistory.com/", gitUrlPath: "https://github.com/bryjna07"),
        
        EvenMember(key: 5, enName: "Sang-Kyeong Jang", krName: "Ïû•ÏÉÅÍ≤Ω", tmi: "Ïï†ÌîåÏõåÏπò ÏãúÎ¶¨Ï¶à10 Íµ¨Îß§ üòà", imgAssetName: "img_sk", hash: ["INFJ", "Ï±ÖÏûÑÍ∞ê", "Í≤ÄÏÉâÎä•Î†•", "Í∑ÄÏó¨ÏõÄÏùÄÏ†ïÏùò"],
                   introduction: "ÏïàÎÖïÌïòÏÑ∏Ïöî, Ï†ÄÎäî 2Ï°∞ÏóêÏÑú Î∂ÄÎ∞úÌëúÏûêÎ•º Îß°Í≥† ÏûàÎäî Ïû•ÏÉÅÍ≤ΩÏûÖÎãàÎã§. Î∂ÄÏ°±ÌïòÏßÄÎßå ÌåÄÏõêÎ∂ÑÎì§Í≥º ÏµúÎåÄÌïú ÌòëÎ†•ÌïòÏó¨ Ï¢ãÏùÄ Í≤∞Í≥ºÎ¨ºÏù¥ ÎÇòÏò¨ Ïàò ÏûàÎèÑÎ°ù Ïù¥ÎÅåÍ≥† Îî∞ÎùºÍ∞ÄÎèÑÎ°ù ÌïòÍ≤†ÏäµÎãàÎã§.", role: "ÌîÑÎ†àÏ††Ìä∏ ÏΩîÎîîÎÑ§Ïù¥ÌÑ∞",
                   blogUrlPath: "https://velog.io/@crois0509/posts", gitUrlPath: "https://github.com/Crois0509")
    ]
    
    var collectionView: UICollectionView!

    override func viewDidLoad() {
        super.viewDidLoad()

        let layout = UICollectionViewFlowLayout()
        layout.sectionInset = UIEdgeInsets(top: 20, left: 16, bottom: 0, right: 16) // ÏñëÏ™Ω Ìå®Îî© 16 Ìè¨Ïù∏Ìä∏
        layout.minimumInteritemSpacing = 8 // ÏïÑÏù¥ÌÖú Í∞ÑÏùò Í∞ÄÎ°ú Í∞ÑÍ≤©
        layout.minimumLineSpacing = 16 // ÏïÑÏù¥ÌÖú Í∞ÑÏùò ÏÑ∏Î°ú Í∞ÑÍ≤©
        collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        view.addSubview(collectionView)
        
        collectionView.translatesAutoresizingMaskIntoConstraints = false
        collectionView.topAnchor.constraint(equalTo: view.topAnchor).isActive = true
        collectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive = true
        collectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive = true
        collectionView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive = true
        
        collectionView.dataSource = self
        collectionView.delegate = self
        collectionView.register(CustomCell.self, forCellWithReuseIdentifier: "cell")
        
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return members.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath) as! CustomCell
        let name = members[indexPath.row].getEnName()
        let tmi = members[indexPath.row].getTmi()
        let imgAssetName = members[indexPath.row].getImgAssetName()
        cell.memberImageView.image = UIImage(named: imgAssetName)
        cell.memberNameLabel.text = name
        cell.memberTmiLabel.text = tmi
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let width = (view.frame.width - 32 - 8) / 2
        return CGSize(width: width, height: 250)
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        print("member \(indexPath.row + 1) is tapped!")
    }
}

class CustomCell: UICollectionViewCell {
    let memberCardView = UIView()
    let memberImageView = UIImageView()
    let memberNameLabel = UILabel()
    let memberTmiLabel = UILabel()
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        // Ïπ¥ÎìúÎ∑∞ Ï∂îÍ∞Ä
        addSubview(memberCardView)
        
        // memberCardView ÏÑ§Ï†ï
        memberCardView.translatesAutoresizingMaskIntoConstraints = false
        memberCardView.topAnchor.constraint(equalTo: topAnchor).isActive = true
        memberCardView.leadingAnchor.constraint(equalTo: leadingAnchor).isActive = true
        memberCardView.trailingAnchor.constraint(equalTo: trailingAnchor).isActive = true
        memberCardView.bottomAnchor.constraint(equalTo: bottomAnchor).isActive = true
        
        memberCardView.layer.cornerRadius = 16
        memberCardView.layer.masksToBounds = true
        memberCardView.layer.borderWidth = 1
        memberCardView.layer.borderColor = UIColor(named: "w500")?.cgColor
        
        // Ïù¥ÎØ∏ÏßÄÎ∑∞Î•º memberCardViewÏóê Ï∂îÍ∞Ä
        memberCardView.addSubview(memberImageView)
        
        // Ïù¥ÎØ∏ÏßÄÎ∑∞ ÏÑ§Ï†ï
        memberImageView.contentMode = .scaleAspectFit
        memberImageView.translatesAutoresizingMaskIntoConstraints = false
        memberImageView.widthAnchor.constraint(equalTo: memberCardView.widthAnchor, multiplier: 0.8).isActive = true
        memberImageView.topAnchor.constraint(equalTo: memberCardView.topAnchor, constant: 16).isActive = true
        memberImageView.centerXAnchor.constraint(equalTo: memberCardView.centerXAnchor).isActive = true
        memberImageView.heightAnchor.constraint(equalTo: memberImageView.widthAnchor, multiplier: 1.0).isActive = true
        
        // Ïù¥Î¶Ñ ÎùºÎ≤®ÏùÑ memberCardViewÏóê Ï∂îÍ∞Ä
        memberCardView.addSubview(memberNameLabel)
        
        // Ïù¥Î¶Ñ ÎùºÎ≤® ÏÑ§Ï†ï
        memberNameLabel.text = "Ïù¥Î¶Ñ"
        memberNameLabel.textAlignment = .center
        memberNameLabel.font = UIFont.dmSans(size: 16, weight: UIFont.Weight.bold)
        memberNameLabel.translatesAutoresizingMaskIntoConstraints = false
        memberNameLabel.topAnchor.constraint(equalTo: memberImageView.bottomAnchor, constant: 8).isActive = true
        memberNameLabel.leadingAnchor.constraint(equalTo: memberCardView.leadingAnchor, constant: 16).isActive = true
        memberNameLabel.trailingAnchor.constraint(equalTo: memberCardView.trailingAnchor, constant: -16).isActive = true
        
        // TMI ÎùºÎ≤®ÏùÑ memberCardViewÏóê Ï∂îÍ∞Ä
        memberCardView.addSubview(memberTmiLabel)
        
        // TMI ÎùºÎ≤® ÏÑ§Ï†ï
        memberTmiLabel.text = "TMI"
        memberTmiLabel.textAlignment = .center
        memberTmiLabel.font = UIFont.dmSans(size: 12, weight: UIFont.Weight.regular)
        memberTmiLabel.translatesAutoresizingMaskIntoConstraints = false
        memberTmiLabel.topAnchor.constraint(equalTo: memberNameLabel.bottomAnchor, constant: 4).isActive = true
        memberTmiLabel.leadingAnchor.constraint(equalTo: memberCardView.leadingAnchor, constant: 16).isActive = true
        memberTmiLabel.trailingAnchor.constraint(equalTo: memberCardView.trailingAnchor, constant: -16).isActive = true
        memberTmiLabel.bottomAnchor.constraint(lessThanOrEqualTo: memberCardView.bottomAnchor, constant: -16).isActive = true
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
